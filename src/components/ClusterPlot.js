import React, { useEffect, useState } from "react";
import Plot from "react-plotly.js";
import { useRecommendations } from "../context/RecommendationContext";  // Import context

const ClusterPlot = () => {
    const { showPlot } = useRecommendations();
    const [plotData, setPlotData] = useState(null);

    useEffect(() => {
        if (showPlot) {
            fetch("http://localhost:8000/plot_clusters")
                .then(response => response.json())
                .then(data => setPlotData(JSON.parse(data)))
                .catch(error => console.error("Error fetching plot:", error));
        }
    }, [showPlot]);

    if (!showPlot) return <p>No cluster data available. Get recommendations first.</p>;

    return (
        <div style={{ display: "flex", alignItems: "start" }}>
            <div style={{ flex: 2 }}>
                {plotData ? (
                    <Plot data={plotData.data} layout={plotData.layout} style={{ width: "100%", height: "600px" }} />
                ) : (
                    <p>Loading plot...</p>
                )}
            </div>
            <div style={{ flex: 1, padding: "20px", borderLeft: "1px solid gray", marginLeft: "20px" }}>
                <h3>How were these recommendations generated?</h3>
                <p>
                    The recommendations are generated by clustering your recently played songs
                    using **Principal Component Analysis (PCA)** and **K-Means clustering**.
                </p>
                <p>
                    After clustering, we find new songs that are closest to the cluster centers
                    using **K-D Trees**, ensuring recommendations are musically similar.
                </p>
            </div>
        </div>
    );
};

export default ClusterPlot;
